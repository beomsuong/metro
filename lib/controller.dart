import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:dio/dio.dart';
import 'model.dart';

class ApiService {
  final Dio dio = Dio();
  final String baseUrl =
      'http://swopenAPI.seoul.go.kr/api/subway/${dotenv.env['API_KEY']}/json/realtimeStationArrival/0/5/';

  Future<Autogenerated> fetchRealtimeArrival(String stationName) async {
    final response = await dio.get('$baseUrl$stationName');

    if (response.statusCode == 200) {
      return Autogenerated.fromJson(response.data);
    } else {
      throw Exception('Failed to load data');
    }
  }
}

class RealtimeArrivalNotifier extends StateNotifier<AsyncValue<Autogenerated>> {
  RealtimeArrivalNotifier(this.apiService) : super(const AsyncValue.loading());

  final ApiService apiService;

  Future<void> fetchRealtimeArrival(String stationName) async {
    try {
      state = const AsyncValue.loading();
      final arrivals = await apiService.fetchRealtimeArrival(stationName);
      state = AsyncValue.data(arrivals);
    } catch (e, stackTrace) {
      state = AsyncValue.error(e, stackTrace);
    }
  }
}

final apiServiceProvider = Provider((ref) => ApiService());

final realtimeArrivalProvider =
    StateNotifierProvider<RealtimeArrivalNotifier, AsyncValue<Autogenerated>>(
        (ref) {
  final apiService = ref.watch(apiServiceProvider);
  return RealtimeArrivalNotifier(apiService);
});
